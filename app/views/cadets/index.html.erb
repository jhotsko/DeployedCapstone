<%= javascript_include_tag "sort_table" %>

<head>
  <style>
    .table {
    }
  </style>
</head>



<div class="container text-left">
  <p id="notice"><%= notice %></p>
  <h2 class="display-4" style="margin-top: 30px;">Cadets</h2>
  <% if (Cadet.find_by(id: session[:cadet_id]).position != "Cadet") %> 
    <%= link_to 'New Cadet', new_cadet_path , :class => "btn btn-secondary btn-success btn-sm" %>
  <%end%>
</div>


<div class="container text-right" style="display: flex; justify-content: flex-end">
  <%= form_tag cadets_path, method: :get do %>
    <%= text_field_tag 'term', params[:term], placeholder: "First or Last Name..." %>
    <button class="btn btn-secondary btn-sm" type="submit_tag" >Search</button>
  <% end %>
  <br>
  <br>
</div>



<!--Cadet Table-->
<table class="table table-striped table-bordered", id = "table">
  <thead class="thead-dark">
    <tr>
      <th onclick="sortTable(0)", scope = "col">Cadet Name</th>
      <th onclick="sortTable(1)",scope="col">Flight</th>
      <th onclick="sortTable(2)",scope="col">Position</th>
      <th onclick="sortTable(3)",scope="col">School</th>
    </tr>
  </thead>
  <tbody>
    <% @cadets.each do |cadet| %>
      <tr>
        <td style="font-weight:bold"><%= link_to "#{cadet.lastName}, #{cadet.firstName} ", cadet %></td>
        <td><%= link_to "#{cadet.flight}", cadet %></td>
        <td><%= link_to "#{cadet.position}", cadet %></td>
        <td><%= link_to "#{cadet.school}", cadet %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<!-- Back to Top Button -->
<button onclick="topFunction()" type="button" class="btn btn-dark">Back to Top</button>
<script>
  function topFunction() {
    document.body.scrollTop = 0; // For Safari
    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
  }
</script>


<!--script>
  function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("table");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc";
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      
      x = rows[i].getElementsByTagName("td")[n];
      y = rows[i + 1].getElementsByTagName("td")[n];
      console.log(x)
      console.log(y)
      
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      if (dir == "asc") {
        if (x.innerText.toLowerCase() > y.innerText.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          console.log(x.innerHTML.toLowerCase())
          shouldSwitch = true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerText.toLowerCase() < y.innerText.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script--!>